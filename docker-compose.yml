version: '3.8'

services:
  traefik:
    image: "traefik:v2.8"
    container_name: "traefik"
    env_file:
      - .env
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=${CASERVER}"
      - "--certificatesresolvers.myresolver.acme.email=rychanya@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
      - "80:80"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  web:
    container_name: bakeneko-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${BAKENEKO_HOST}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    build:
      target: ${BAKENEKO_TARGET:-prod}
    env_file:
      - .env
    depends_on:
      - db
      
  db:
    image: postgres
    container_name: bakeneko-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - ${POSTGRES_PORT}
    env_file:
      - .env

volumes:
  postgres_data:
